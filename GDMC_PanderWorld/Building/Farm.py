from interfaceUtils import runCommand
from gdpc import Editor, Block, Transform, geometry
editor=Editor(buffering=True)

def buildBamboo(x,y,z,height):
    for i in range(height):
        editor.placeBlock((x,y+i,z),Block("bamboo",{"age": "1", "leaves": "small"}))

def buildBonsai(x,y,z):
    editor.placeBlock((x,y,z),Block('potted_bamboo'))
    editor.placeBlock((x,y+1,z),Block("jungle_leaves",{"persistent": "true"}))
    editor.placeBlock((x,y+2,z),Block("jungle_leaves",{"persistent": "true"}))

def buildFarmHouse(x, y, z):
    for i in range(-4,5):
        editor.placeBlock((x+4,y,z+i),Block('chiseled_stone_bricks'))
        editor.placeBlock((x-4,y,z+i),Block('chiseled_stone_bricks'))
        editor.placeBlock((x+i,y,z+4),Block('chiseled_stone_bricks'))
        editor.placeBlock((x+i,y,z-4),Block('chiseled_stone_bricks'))
        editor.placeBlock((x+i,y,z+5),Block("oak_leaves",{"persistent": "true"}))
        editor.placeBlock((x+i,y,z-5),Block("oak_leaves",{"persistent": "true"}))
    for i in range(-3,4):
        for j in range(-3,4):
            editor.placeBlock((x+i,y,z+j),Block('birch_planks'))
            editor.placeBlock((x+i,y+5,z+j),Block('birch_planks'))
    for i in range(-4,5):
        for j in range(5):
            editor.placeBlock((x+4,y+1+j,z+i),Block('birch_planks'))
            editor.placeBlock((x-4,y+1+j,z+i),Block('birch_planks'))
            editor.placeBlock((x+i,y+1+j,z+4),Block('birch_planks'))
            editor.placeBlock((x+i,y+1+j,z-4),Block('birch_planks'))
    for i in range(-4,5):
        editor.placeBlock((x+i,y+5,z+5),Block('stone_bricks'))
        editor.placeBlock((x+i,y+4,z+6),Block('stone_bricks'))
        editor.placeBlock((x+i,y+6,z+4),Block('stone_bricks'))
        editor.placeBlock((x+i,y+5,z-5),Block('stone_bricks'))
        editor.placeBlock((x+i,y+4,z-6),Block('stone_bricks'))
        editor.placeBlock((x+i,y+6,z-4),Block('stone_bricks'))
        editor.placeBlock((x+i,y+6,z+3),Block('stone_bricks'))
        editor.placeBlock((x+i,y+7,z+2),Block('stone_bricks'))
        editor.placeBlock((x+i,y+8,z+1),Block('stone_bricks'))
        editor.placeBlock((x+i,y+6,z-3),Block('stone_bricks'))
        editor.placeBlock((x+i,y+7,z-2),Block('stone_bricks'))
        editor.placeBlock((x+i,y+8,z-1),Block('stone_bricks'))
        editor.placeBlock((x+i,y+9,z),Block('stone_bricks'))
    for i in [-4,-2,0,2,4]:
        editor.placeBlock((x+i,y+5,z+5),Block('oak_slab'))
        editor.placeBlock((x+i,y+5,z-5),Block('oak_slab'))
        editor.placeBlock((x+i,y+4,z+6),Block("oak_slab",{"type": "top"}))
        editor.placeBlock((x+i,y+4,z-6),Block("oak_slab",{"type": "top"}))
        editor.placeBlock((x+i,y+5,z+7),Block('chiseled_stone_bricks'))
        editor.placeBlock((x+i,y+6,z+6),Block('stone_brick_slab'))
        editor.placeBlock((x+i,y+7,z+4),Block('stone_brick_slab'))
        editor.placeBlock((x+i,y+5,z+6),Block('stone_bricks'))
        editor.placeBlock((x+i,y+6,z+5),Block('stone_bricks'))
        editor.placeBlock((x+i,y+7,z+3),Block('stone_bricks'))
        editor.placeBlock((x+i,y+8,z+2),Block('stone_bricks'))
        editor.placeBlock((x+i,y+9,z+1),Block('stone_bricks'))
        editor.placeBlock((x+i,y+5,z-7),Block('chiseled_stone_bricks'))
        editor.placeBlock((x+i,y+6,z-6),Block('stone_brick_slab'))
        editor.placeBlock((x+i,y+7,z-4),Block('stone_brick_slab'))
        editor.placeBlock((x+i,y+5,z-6),Block('stone_bricks'))
        editor.placeBlock((x+i,y+6,z-5),Block('stone_bricks'))
        editor.placeBlock((x+i,y+7,z-3),Block('stone_bricks'))
        editor.placeBlock((x+i,y+8,z-2),Block('stone_bricks'))
        editor.placeBlock((x+i,y+9,z-1),Block('stone_bricks'))
        editor.placeBlock((x+i,y+10,z),Block('stone_bricks'))
        editor.placeBlock((x+i,y+4,z+5),Block("oak_stairs",{"facing": "north"}))
        editor.placeBlock((x+i,y+4,z-5),Block("oak_stairs",{"facing": "south"}))
    for i in range(-3,4):
        editor.placeBlock((x+4,y+6,z+i),Block('birch_planks'))
        editor.placeBlock((x-4,y+6,z+i),Block('birch_planks'))
    for i in range(-2,3):
        editor.placeBlock((x+4,y+7,z+i),Block('birch_planks'))
        editor.placeBlock((x-4,y+7,z+i),Block('birch_planks'))
    for i in range(-1,2):
        editor.placeBlock((x+4,y+8,z+i),Block('birch_planks'))
        editor.placeBlock((x-4,y+8,z+i),Block('birch_planks'))
    for i in [-3,-1,1,3]:
        editor.placeBlock((x+i,y+10,z),Block('stone_brick_slab'))
        editor.placeBlock((x+i,y+4,z+5),Block('sea_lantern'))
        editor.placeBlock((x+i,y+4,z-5),Block('sea_lantern'))
        editor.placeBlock((x+i,y+3,z+5),Block("oak_trapdoor",{"half": "top"}))
        editor.placeBlock((x+i,y+3,z-5),Block("oak_trapdoor",{"half": "top"}))
        editor.placeBlock((x+4,y+9,z),Block('birch_planks'))
        editor.placeBlock((x-4,y+9,z),Block('birch_planks'))
        editor.placeBlock((x+5,y+5,z+7),Block('smooth_stone_slab'))
        editor.placeBlock((x+5,y+5,z+6),Block('smooth_stone_slab'))
        editor.placeBlock((x+5,y+4,z+6),Block("smooth_stone_slab",{"type": "top"}))
        editor.placeBlock((x+5,y+5,z+5),Block("smooth_stone_slab",{"type": "double"}))
        editor.placeBlock((x+5,y+5,z+4),Block("smooth_stone_slab",{"type": "top"}))
        editor.placeBlock((x+5,y+6,z+4),Block('smooth_stone_slab'))
        editor.placeBlock((x+5,y+6,z+3),Block('smooth_stone_slab',{"type": "double"}))
        editor.placeBlock((x+5,y+7,z+2),Block('smooth_stone_slab',{"type": "double"}))
        editor.placeBlock((x+5,y+8,z+1),Block('smooth_stone_slab',{"type": "double"}))
        editor.placeBlock((x+5,y+5,z-7),Block('smooth_stone_slab'))
        editor.placeBlock((x+5,y+5,z-6),Block('smooth_stone_slab'))
        editor.placeBlock((x+5,y+4,z-6),Block('smooth_stone_slab',{"type": "top"}))
        editor.placeBlock((x+5,y+5,z-5),Block('smooth_stone_slab',{"type": "double"}))
        editor.placeBlock((x+5,y+5,z-4),Block('smooth_stone_slab',{"type": "top"}))
        editor.placeBlock((x+5,y+6,z-4),Block('smooth_stone_slab'))
        editor.placeBlock((x+5,y+6,z-3),Block('smooth_stone_slab',{"type": "double"}))
        editor.placeBlock((x+5,y+7,z-2),Block('smooth_stone_slab',{"type": "double"}))
        editor.placeBlock((x+5,y+8,z-1),Block('smooth_stone_slab',{"type": "double"}))
        editor.placeBlock((x+5,y+9,z),Block('smooth_stone_slab',{"type": "double"}))
        editor.placeBlock((x-5,y+5,z+7),Block('smooth_stone_slab'))
        editor.placeBlock((x-5,y+5,z+6),Block('smooth_stone_slab'))
        editor.placeBlock((x-5,y+4,z+6),Block('smooth_stone_slab',{"type": "top"}))
        editor.placeBlock((x-5,y+5,z+5),Block('smooth_stone_slab',{"type": "double"}))
        editor.placeBlock((x-5,y+5,z+4),Block('smooth_stone_slab',{"type": "top"}))
        editor.placeBlock((x-5,y+6,z+4),Block('smooth_stone_slab'))
        editor.placeBlock((x-5,y+6,z+3),Block('smooth_stone_slab',{"type": "double"}))
        editor.placeBlock((x-5,y+7,z+2),Block('smooth_stone_slab',{"type": "double"}))
        editor.placeBlock((x-5,y+8,z+1),Block('smooth_stone_slab',{"type": "double"}))
        editor.placeBlock((x-5,y+5,z-7),Block('smooth_stone_slab'))
        editor.placeBlock((x-5,y+5,z-6),Block('smooth_stone_slab'))
        editor.placeBlock((x-5,y+4,z-6),Block('smooth_stone_slab',{"type": "top"}))
        editor.placeBlock((x-5,y+5,z-5),Block('smooth_stone_slab',{"type": "double"}))
        editor.placeBlock((x-5,y+5,z-4),Block('smooth_stone_slab',{"type": "top"}))
        editor.placeBlock((x-5,y+6,z-4),Block('smooth_stone_slab'))
        editor.placeBlock((x-5,y+6,z-3),Block('smooth_stone_slab',{"type": "double"}))
        editor.placeBlock((x-5,y+7,z-2),Block('smooth_stone_slab',{"type": "double"}))
        editor.placeBlock((x-5,y+8,z-1),Block('smooth_stone_slab',{"type": "double"}))
        editor.placeBlock((x-5,y+9,z),Block('smooth_stone_slab',{"type": "double"}))
        editor.placeBlock((x+5,y+10,z),Block('diorite_wall'))
        editor.placeBlock((x-5,y+10,z),Block('diorite_wall'))
    for i in range(5):
        editor.placeBlock((x+5,y+i,z+5),Block('stripped_spruce_log'))
        editor.placeBlock((x+5,y+i,z-5),Block('stripped_spruce_log'))
        editor.placeBlock((x-5,y+i,z+5),Block('stripped_spruce_log'))
        editor.placeBlock((x-5,y+i,z-5),Block('stripped_spruce_log'))
    for i in range(7):
        editor.placeBlock((x+5,y+i,z+2),Block('stripped_spruce_log'))
        editor.placeBlock((x+5,y+i,z-2),Block('stripped_spruce_log'))
        editor.placeBlock((x-5,y+i,z+2),Block('stripped_spruce_log'))
        editor.placeBlock((x-5,y+i,z-2),Block('stripped_spruce_log'))
    for i in range(3):
        editor.placeBlock((x+5,y+5+i,z),Block('stripped_spruce_log'))
        editor.placeBlock((x-5,y+5+i,z),Block('stripped_spruce_log'))
    for i in range(-4,5):
        editor.placeBlock((x+5,y+4,z+i),Block('stripped_spruce_log',{"axis": "z"}))
        editor.placeBlock((x-5,y+4,z+i),Block('stripped_spruce_log',{"axis": "z"}))
    for i in range(-2,3):
        editor.placeBlock((x+5,y+6,z+i),Block('stripped_spruce_log',{"axis": "z"}))
        editor.placeBlock((x-5,y+6,z+i),Block('stripped_spruce_log',{"axis": "z"}))
    for i in range(-1,2):
        editor.placeBlock((x+4,y+1,z+i),Block('oak_door',{"facing": "west", "half": "lower"}))
        editor.placeBlock((x-4,y+1,z+i),Block('oak_door',{"facing": "east", "half": "lower"}))
        editor.placeBlock((x+4,y+2,z+i),Block('oak_door',{"facing": "west", "half": "upper"}))
        editor.placeBlock((x-4,y+2,z+i),Block('oak_door',{"facing": "east", "half": "upper"}))
        editor.placeBlock((x+5,y+3,z+i),Block('oak_stairs',{"facing": "west"}))
        editor.placeBlock((x-5,y+3,z+i),Block('oak_stairs',{"facing": "east"}))
        editor.placeBlock((x+5,y,z+i),Block('stone_brick_stairs',{"facing": "west"}))
        editor.placeBlock((x-5,y,z+i),Block('stone_brick_stairs',{"facing": "east"}))
    for i in range(-2,3):
        for j in range(3):
            editor.placeBlock((x+i,y+1+j,z+4),Block('glass_pane'))
            editor.placeBlock((x+i,y+1+j,z-4),Block('glass_pane'))
    editor.placeBlock((x+3,y+4,z+3),Block('lantern',{"hanging": "true"}))
    editor.placeBlock((x+3,y+4,z-3),Block('lantern',{"hanging": "true"}))
    editor.placeBlock((x-3,y+4,z+3),Block('lantern',{"hanging": "true"}))
    editor.placeBlock((x-3,y+4,z-3),Block('lantern',{"hanging": "true"}))
    editor.placeBlock((x+3,y+1,z-3),Block('stripped_spruce_wood'))
    editor.placeBlock((x+3,y+1,z-2),Block('stripped_spruce_wood'))
    editor.placeBlock((x+1,y+1,z-3),Block('light_blue_bed',{"facing": "east", "part": "foot"}))
    editor.placeBlock((x+1,y+1,z-2),Block('light_blue_bed',{"facing": "east", "part": "foot"}))
    editor.placeBlock((x,y+1,z-3),Block('oak_stairs',{"facing": "west"}))
    editor.placeBlock((x,y+1,z-2),Block('oak_stairs',{"facing": "west"}))
    editor.placeBlock((x,y+1,z-1),Block('oak_trapdoor',{"facing": "south", "open": "true"}))
    editor.placeBlock((x+3,y+1,z+3),Block('bookshelf'))
    editor.placeBlock((x+3,y+1,z+2),Block('bookshelf'))
    editor.placeBlock((x+3,y+2,z+2),Block('bookshelf'))
    editor.placeBlock((x+3,y+2,z+3),Block('potted_poppy'))
    editor.placeBlock((x+3,y+3,z+2),Block('creeper_head',{"rotation": "13"}))
    editor.placeBlock((x-3,y+1,z+3),Block('barrel',{"facing": "east"}))
    editor.placeBlock((x-3,y+1,z+2),Block('barrel',{"facing": "east"}))
    editor.placeBlock((x-3,y+2,z+3),Block('oak_stairs',{"facing": "west", "half": "top"}))
    editor.placeBlock((x-3,y+2,z+2),Block('oak_stairs',{"facing": "west", "half": "top"}))
    editor.placeBlock((x-3,y+3,z+3),Block('chest',{"facing": "east", "type": "right"}))
    editor.placeBlock((x-3,y+3,z+2),Block('chest',{"facing": "east", "type": "left"}))
    editor.placeBlock((x-3,y+1,z+1),Block('oak_trapdoor',{"facing": "north", "open": "true"}))
    editor.placeBlock((x-3,y+2,z+1),Block('oak_trapdoor',{"facing": "north", "open": "true"}))
    editor.placeBlock((x-3,y+3,z+1),Block('oak_trapdoor',{"facing": "north", "open": "true"}))
    editor.placeBlock((x-2,y+2,z+3),Block('oak_wall_sign',{"facing": "east"}))
    editor.placeBlock((x-2,y+2,z+2),Block('oak_wall_sign',{"facing": "east"}))
    editor.placeBlock((x-3,y+1,z-3),Block('smoker',{"facing": "east"}))
    editor.placeBlock((x-3,y+1,z-2),Block('blast_furnace',{"facing": "east"}))
    editor.placeBlock((x,y+1,z+2),Block('oak_fence'))
    editor.placeBlock((x,y+2,z+2),Block('white_carpet'))
    editor.placeBlock((x+1,y+1,z+2),Block('oak_stairs',{"facing": "east"}))
    editor.placeBlock((x-1,y+1,z+2),Block('oak_stairs',{"facing": "west"}))
    editor.placeBlock((x,y+1,z+1),Block('oak_stairs',{"facing": "north"}))
    #屋根上光源  
    editor.placeBlock((x+5,y+11,z),Block("lantern"))
    editor.placeBlock((x-5,y+11,z),Block("lantern"))
    editor.placeBlock((x+4,y+6,z+7),Block("lantern"))
    editor.placeBlock((x+4,y+6,z-7),Block("lantern"))
    editor.placeBlock((x-4,y+6,z+7),Block("lantern"))
    editor.placeBlock((x-4,y+6,z-7),Block("lantern"))
    editor.placeBlock((x,y+9,z+2),Block("lantern"))
    editor.placeBlock((x,y+9,z-2),Block("lantern"))
    #部屋光源
    editor.placeBlock((x,y+5,z),Block("glass"))
    editor.placeBlock((x,y+6,z),Block("glowstone"))


def Farm_water(x,y,z): #光源1
    editor.placeBlock((x,y-2,z),Block("glowstone"))
    editor.placeBlock((x,y-1,z),Block("water"))
    editor.placeBlock((x,y,z),Block("stone_brick_slab"))


def buildFarmland(x,y,z):
    for i in range(-20,21):
        for j in range(-20,21):
            if not (abs(i)<=5 and abs(j)<=5):
                if i*i+j*j<400:
                    editor.placeBlock((x+i,y-1,z+j),Block('farmland',{"moisture": "7"}))
                    if i>=2 and j>=2:
                        editor.placeBlock((x+i,y,z+j),Block('wheat',{"age": "7"}))
                    if i>=2 and j<=-2:
                        editor.placeBlock((x+i,y,z+j),Block('potatoes',{"age": "7"}))
                    if i<=-2 and j>=2:
                        editor.placeBlock((x+i,y,z+j),Block('beetroots',{"age": "3"}))
                    if i<=-2 and j<=-2:
                        editor.placeBlock((x+i,y,z+j),Block('carrots',{"age": "7"}))
    for i in range(-1,2):
        for j in range(14):
            editor.placeBlock((x+i,y-1,z+6+j),Block('dirt_path'))
            editor.placeBlock((x+i,y-1,z-6-j),Block('dirt_path'))
            editor.placeBlock((x+6+j,y-1,z+i),Block('dirt_path'))
            editor.placeBlock((x-6-j,y-1,z+i),Block('dirt_path'))
    Farm_water(x+6,y,z+10)
    Farm_water(x+10,y,z+6)
    Farm_water(x+6,y,z+15)
    Farm_water(x+15,y,z+6)
    Farm_water(x+12,y,z+12)
    Farm_water(x+6,y,z-10)
    Farm_water(x+10,y,z-6)
    Farm_water(x+6,y,z-15)
    Farm_water(x+15,y,z-6)
    Farm_water(x+12,y,z-12)
    Farm_water(x-6,y,z+10)
    Farm_water(x-10,y,z+6)
    Farm_water(x-6,y,z+15)
    Farm_water(x-15,y,z+6)
    Farm_water(x-12,y,z+12)
    Farm_water(x-6,y,z-10)
    Farm_water(x-10,y,z-6)
    Farm_water(x-6,y,z-15)
    Farm_water(x-15,y,z-6)
    Farm_water(x-12,y,z-12)

    for i in range(-20,21):
        editor.placeBlock((x+i,y,z+20),Block('oak_fence'))
        editor.placeBlock((x+i,y,z-20),Block('oak_fence'))
        editor.placeBlock((x+20,y,z+i),Block('oak_fence'))
        editor.placeBlock((x-20,y,z+i),Block('oak_fence'))
    for i in range(-1,2):
        editor.placeBlock((x+i,y,z+20),Block('oak_fence_gate',{"facing": "south"}))
        editor.placeBlock((x+i,y,z-20),Block('oak_fence_gate',{"facing": "north"}))
        editor.placeBlock((x+20,y,z+i),Block('oak_fence_gate',{"facing": "west"}))
        editor.placeBlock((x-20,y,z+i),Block('oak_fence_gate',{"facing": "east"}))

    for i in range(3):
        editor.placeBlock((x+20-i*9,y+1,z+20),Block("lantern"))
        editor.placeBlock((x+20,y+1,z+20-i*9),Block("lantern"))
    for i in range(3):
        editor.placeBlock((x+20-i*9,y+1,z-20),Block("lantern"))
        editor.placeBlock((x+20,y+1,z-20+i*9),Block("lantern"))
    for i in range(3):
        editor.placeBlock((x-20+i*9,y+1,z+20),Block("lantern"))
        editor.placeBlock((x-20,y+1,z+20-i*9),Block("lantern"))
    for i in range(3):
        editor.placeBlock((x-20+i*9,y+1,z-20),Block("lantern"))
        editor.placeBlock((x-20,y+1,z-20+i*9),Block("lantern"))

    editor.placeBlock((x+15,y,z+15),Block("cobblestone_wall"))
    editor.placeBlock((x+15,y+1,z+15),Block("lantern"))
    editor.placeBlock((x+15,y,z-15),Block("cobblestone_wall"))
    editor.placeBlock((x+15,y+1,z-15),Block("lantern"))
    editor.placeBlock((x-15,y,z+15),Block("cobblestone_wall"))
    editor.placeBlock((x-15,y+1,z+15),Block("lantern"))
    editor.placeBlock((x-15,y,z-15),Block("cobblestone_wall"))
    editor.placeBlock((x-15,y+1,z-15),Block("lantern"))

    editor.placeBlock((x+12,y-1,z),Block("glass"))
    editor.placeBlock((x+12,y-2,z),Block("glowstone"))
    editor.placeBlock((x-12,y-1,z),Block("glass"))
    editor.placeBlock((x-12,y-2,z),Block("glowstone"))
    editor.placeBlock((x,y-1,z+12),Block("glass"))
    editor.placeBlock((x,y-2,z+12),Block("glowstone"))
    editor.placeBlock((x,y-1,z-12),Block("glass"))
    editor.placeBlock((x,y-2,z-12),Block("glowstone"))
    buildBamboo(x+17,y,z+18,5)
    buildBamboo(x+16,y,z+18,6)
    buildBamboo(x+19,y,z+16,7)
    buildBamboo(x+16,y,z+15,5)
    buildBamboo(x+14,y,z+18,6)
    buildBamboo(x+18,y,z+14,7)
    buildBamboo(x+18,y,z+12,7)
    buildBamboo(x+12,y,z+19,6)
    buildBamboo(x+17,y,z-18,5)
    buildBamboo(x+16,y,z-19,6)
    buildBamboo(x+19,y,z-16,7)
    buildBamboo(x+16,y,z-15,5)
    buildBamboo(x+13,y,z-18,6)
    buildBamboo(x+18,y,z-14,7)
    buildBamboo(x+18,y,z-13,7)
    buildBamboo(x+12,y,z-19,6)
    buildBamboo(x-17,y,z+18,5)
    buildBamboo(x-18,y,z+17,6)
    buildBamboo(x-19,y,z+15,7)
    buildBamboo(x-16,y,z+15,5)
    buildBamboo(x-14,y,z+18,6)
    buildBamboo(x-18,y,z+13,7)
    buildBamboo(x-18,y,z+12,7)
    buildBamboo(x-12,y,z+19,6)
    buildBamboo(x-17,y,z-18,5)
    buildBamboo(x-18,y,z-16,6)
    buildBamboo(x-19,y,z-15,7)
    buildBamboo(x-16,y,z-15,5)
    buildBamboo(x-14,y,z-18,6)
    buildBamboo(x-18,y,z-15,7)
    buildBamboo(x-18,y,z-12,7)
    buildBamboo(x-12,y,z-19,6)
    buildBonsai(x+21,y,z+2)
    buildBonsai(x+21,y,z-2)
    buildBonsai(x-21,y,z+2)
    buildBonsai(x-21,y,z-2)
    buildBonsai(x+2,y,z+21)
    buildBonsai(x-2,y,z+21)
    buildBonsai(x+2,y,z-21)
    buildBonsai(x-2,y,z-21)

def buildFarm(x, y, z):
    buildFarmHouse(x,y,z)
    buildFarmland(x,y,z)

def rectanglesOverlap(r1, r2):
    """Check that r1 and r2 do not overlap."""
    if (r1 >= r2 + r2[2]) or (r1 + r1[2] <= r2) or (r1 + r1 <= r2) or (r1 >= r2 + r2):
        return False
    else:
        return True
